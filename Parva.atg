  COMPILER Parva $CN
  /* Parva level 1 grammar  - Coco/R for Java (EBNF)
     P.D. Terry, Rhodes University, modified by KL Bradshaw, 2023
     Basic Grammar only -- for prac 4 */

  CHARACTERS
    lf         = CHR(10) .
    backslash  = CHR(92) .
    control    = CHR(0) .. CHR(31) .
    letter     = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                 + "abcdefghijklmnopqrstuvwxyz" .
    digit      = "0123456789" .
    stringCh   = ANY - '"' - control - backslash .
    charCh     = ANY - "'" - control - backslash .
    printable  = ANY - control .

  TOKENS
    identifier = letter { letter | digit | "_" } .
    number     = digit { digit } .
    stringLit  = '"' { stringCh | backslash printable } '"' .
    charLit    = "'" ( charCh   | backslash printable ) "'" .

  COMMENTS FROM "//" TO lf
  COMMENTS FROM "/*" TO "*/"
  IGNORE CHR(9) .. CHR(13)

  PRODUCTIONS
    Parva             = "void" identifier "(" ")" Block .
    Block             = "{" { Statement } "}" .
    Statement         =   Block | ";"
                        | VarDeclarations
                        | Assignment | IfStatement | WhileStatement
						| ForLoop
						| RepeatStatement 
                        | ReturnStatement | HaltStatement
						| BreakStatement | ContinueStatement
                        | ReadStatement | WriteStatement .
    
    VarDeclarations   = Type OneVar { "," OneVar } ";" .
    OneVar            = identifier [ "=" Expression ] .
    Assignment        = Designator ("=" Expression | "++" | "--") ";" .            				/*added increment and decrement */
    Designator        = identifier [ "[" Expression "]" ] .
    IfStatement       = "if" "(" Condition ")" Statement ["else" Statement]. 					/* optional else causes warning */
	WhileStatement    = "while" "(" Condition ")" Statement .
	ForLoop	  		  = "for" ("(" Assignment Condition ";" identifier ["++"|"--"] ")" | identifier "in" "(" (number{","number} 
							| stringLit{","stringLit} | charLit{"," charLit}) ")") Statement .	/* for loop in java or python style */
    RepeatStatement   = "repeat" Statement {Statement} "until" "(" Condition ")".				/* repeat statement added */
	ReturnStatement   = "return" ";" .
    HaltStatement     = "halt" ";" .
	BreakStatement	  = "break" ";" .															/*break statement added */
	ContinueStatement = "continue" ";" .														/* continue statement added */
    ReadStatement     = "read" "(" ReadElement
                                   { "," ReadElement } ")" ";" .
    ReadElement       = stringLit | Designator .
    WriteStatement    = "write" "(" WriteElement
                                    { "," WriteElement } ")" ";" .
    WriteElement      = stringLit | Expression .
    Condition         = Expression .
    Expression        = AddExp [ RelOp AddExp ] | ConvertOp .								/* added ConvertOp to convert types char and int */
    AddExp            = [ "+" | "-" ] Term { AddOp Term } .
    Term              = Factor { MulOp Factor } .
    Factor            =   Designator | Constant
                        | "new" BasicType "[" Expression "]"
                        | "!" Factor | "(" Expression ")" .
	Constant          =   number | charLit
                        | "true" | "false" | "null" . 
    Type              = BasicType [ "[]" ] .
    BasicType         = "int" | "bool" | "char" .											/* added character type */
    AddOp             = "+" | "-" | "||" .
    MulOp             = "*" | "/" | "&&" | "%".												/* added modulus operator */
    RelOp             = "==" | "!=" | "<" | "<=" | ">" | ">=" .
	ConvertOp		  = "ord" "(" charLit ")" | "chr" "(" number ")".						/* method to convert between char and int */
  END Parva.
